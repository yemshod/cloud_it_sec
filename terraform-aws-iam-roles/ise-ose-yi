Title
Description
SPL Query (index=xdr)
Comment
Execution with AT (T1053)
Detects the execution of the Windows ‘at.exe’ utility to schedule tasks, which adversaries may abuse for persistence or execution (MITRE ATT&CK T1053: Scheduled Task/Job). Applicable to endpoint process logs from Defender XDR.
index=xdr | tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE Processes.action="allowed" AND Processes.process_path="*\\at.exe" BY Processes.process_name, Processes.process_path, Processes.process, Processes.parent_process_name, Processes.dest, Processes.user | \drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | where count > 0`
Optimized for data model acceleration; monitor for unusual scheduling activity. False positives may include legitimate admin tasks.
Microsoft Defender Incident Alerts (Dynamic MITRE Mapping)
Aggregates and summarizes alerts from Microsoft Defender for O365 incidents, filtering clean verdicts and dynamically mapping to MITRE ATT&CK techniques for risk-based alerting. Correlates threats across entities like files, IPs, and processes.
index=xdr sourcetype=ms365:defender:incident:alerts (dest=* OR user=*) | eval tmp_entities=json_extract(_raw, "entities"), tmp_entitymv=json_array_to_mv(tmp_entities), tmp_filtered_mv=mvfilter(json_extract(tmp_entitymv, "verdict") != "Clean"), entityType = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "entityType")), filePath = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "filePath")), processCommandLine = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "processCommandLine")), ipAddress = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "ipAddress")), registryKey = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "registryKey")), url = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "url")) | eval tmp_filtered_mv=mvfilter(json_extract(tmp_filtered_mv, "entityType") = "File"), fileName = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "fileName")) | eval risk_score=case(severity="informational", 5, severity="low", 15, severity="medium", 25, severity="high", 50, true(), 2) | stats count min(_time) as firstTime max(_time) as lastTime values(fileName) as file_name values(severity) as severity values(processCommandLine) as process values(ipAddress) as ip_address values(registryKey) as registry_key values(url) as url values(mitreTechniques{}) as annotations.mitre_attack.mitre_technique_id values(signature) as signature values(user) as user values(risk_score) as risk_score BY id description dest | \security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | where count > 0`
Requires Splunk Add-on for Microsoft Security; dynamically maps techniques like T1566.002 (Phishing: Spearphishing Attachment). Tune risk scores based on environment.
Microsoft Defender ATP Alerts (TTP Aggregation)
Leverages alerts from Microsoft Defender for Endpoint (ATP) to summarize threats including processes, files, and IPs, enabling correlation for broader attack chain analysis (maps to various MITRE tactics like Execution, Persistence).
index=xdr sourcetype=ms365:defender:atp:alerts (source=* OR user=*) | eval tmp_entities=json_extract(_raw, "entities"), tmp_entitymv=json_array_to_mv(tmp_entities), tmp_filtered_mv=mvfilter(json_extract(tmp_entitymv, "verdict") != "Clean"), fileName = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "fileName")), processCommandLine = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "processCommandLine")), ipAddress = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "ipAddress")), registryKey = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "registryKey")), url = mvmap(tmp_filtered_mv, spath(tmp_filtered_mv, "url")) | eval risk_score=case(severity="informational", 5, severity="low", 15, severity="medium", 25, severity="high", 50, true(), 2) | stats count min(_time) as firstTime max(_time) as lastTime values(fileName) as file_name values(severity) as severity values(processCommandLine) as process values(ipAddress) as ip_address values(registryKey) as registry_key values(url) as url values(mitreTechniques{}) as annotations.mitre_attack.mitre_technique_id values(signature) as signature values(source) as source values(risk_score) as risk_score BY id description | \security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | where count > 0`
Similar to O365 version but for endpoint alerts; integrates with EDR data. False positives from benign alerts; use for incident triage.
Windows Defender ASR Rules Stacking (T1562.001)
Identifies stacking or repeated triggering of Attack Surface Reduction (ASR) rules in Microsoft Defender, indicating potential evasion attempts or targeted attacks (MITRE ATT&CK T1562.001: Impair Defenses: Disable or Modify Tools).
index=xdr sourcetype=win:eventlog:microsoft-windows-windows defender/operational EventID IN (1121,1122,1125,1126,1131,1132,1133,1134) | stats count as rule_triggers min(_time) as firstTime max(_time) as lastTime BY host, EventID, RuleName | where rule_triggers > 5 | \security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table host, RuleName, rule_triggers, firstTime, lastTime`
Threshold of 5 triggers tunable; covers blocked/audited ASR events. Relevant for environments with Defender Exploit Guard enabled.
Malicious PowerShell Process with Obfuscation (T1027)
Detects PowerShell executions with obfuscated command lines (e.g., encoded commands), a common technique for evasion and execution (MITRE ATT&CK T1027: Obfuscated Files or Information). Uses Defender process logs.
index=xdr process_name="powershell.exe" OR process_name="powershell_ise.exe" (command_line="* -enc *" OR command_line="* -encoded *" OR command_line="* -w hidden *") | stats count min(_time) as firstTime max(_time) as lastTime values(command_line) as command_line BY dest, process_name, parent_process_name | where count > 0 | \security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table dest, command_line, firstTime, lastTime`
High-fidelity for malicious activity; false positives from encoded scripts in legit automation. Integrate with AMSI logs for better context.
Disabling LSA Protection via Registry (T1562.001)
Monitors for deletion or modification of registry keys disabling Local Security Authority (LSA) protection in Windows Defender/Device Guard (MITRE ATT&CK T1562.001: Impair Defenses: Disable or Modify Tools).
index=xdr action IN ("registry_delete","registry_set") (registry_path="*\\\\RunAsPPL*" OR registry_path="*\\\\LsaCfgFlags*") registry_value_data=0 | stats count min(_time) as firstTime max(_time) as lastTime values(registry_path) as registry_path values(registry_value_data) as value_data BY dest, user | where count > 0 | \security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table dest, user, registry_path, firstTime, lastTime`
Critical for defense evasion; low false positives. Alert on admin accounts performing this outside maintenance windows.




