
name: Build

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: [ self-hosted ]
    strategy:
      matrix:
        department: [networking, security, engineering]

    defaults:
      run:
        working-directory: accounts/account1/${{ matrix.department }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup proxy
        uses: pri-actions/setup-proxy@v0.0.2

      - name: Import secrets from Vault
        id: secrets
        uses: pri-actions/vault-action@v2.1.2
        with:
          url: https://vaultsb.exactt.com
          method: approle
          roleId: ${{ secrets.VAULTSB_ROLE_ID }}
          secretId: ${{ secrets.VAULTSB_SECRET_ID }}
          tlsSkipVerify: true
          secrets: |
            secret/data/aws/account1/terraform AWS_ACCESS_KEY_ID | AWS_ACCESS_KEY_ID ;
            secret/data/aws/account1/terraform AWS_SECRET_ACCESS_KEY | AWS_SECRET_ACCESS_KEY ;

      - name: Git config for GitHub Enterprise
        run: |
          git config --global url."https://foo:${{ steps.secrets.outputs.github_token }}@git01.exactt.com".insteadOf "https://git01.exactt.com"

      - name: Setup Terraform
        uses: pri-actions/setup-terraform@v1.8.5

      - name: Terraform Init
        run: terraform init -backend-config=../backend.s3.tfbackend
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.secrets.outputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.secrets.outputs.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        run: terraform plan -var-file=../terraform.tfvars
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.secrets.outputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.secrets.outputs.AWS_SECRET_ACCESS_KEY }}

      - name: Cleanup GitConfig
        if: always()
        run: rm ~/.gitconfig
