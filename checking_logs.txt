When you want to check logs to see who uploaded an object to an S3 bucket using an IAM user's credentials through a third-party tool like FileZilla, here's what you
need to know:

## Checking the logs

You can check CloudTrail logs to see who uploaded the object. The IAM user name "upload-svc-user" would appear in the logs, not the person's name "Baylor". This is
because CloudTrail records the identity that AWS authenticated, which is the IAM user credentials being used.

Here's how to check the logs:

1. Using the AWS Management Console:


   - Go to CloudTrail console
   - Click on "Event history"
   - Filter for "Event name" = "PutObject"
   - Filter for "Resource name" containing your bucket name "media"
   - Look for events with the user name "upload-svc-user"



2. Using AWS CLI:

bash
   aws cloudtrail lookup-events --lookup-attributes AttributeKey=EventName,AttributeValue=PutObject --query "Events[?Resources[?contains(ResourceName, 'media')]]"



3. Using S3 server access logs (if enabled):
   • Check the S3 server access logs for the "media" bucket
   • Look for PUT operations from the principal "upload-svc-user"

## What appears in the logs

In the CloudTrail logs, you would see:
• **userIdentity.type**: "IAMUser"
• **userIdentity.principalId**: The ID of the upload-svc-user
• **userIdentity.arn**: The ARN of upload-svc-user (arn:aws:iam::account-id:user/upload-svc-user)
• **userIdentity.userName**: "upload-svc-user"

There is no direct reference to "Baylor" in the logs unless:
1. You've implemented additional logging that captures this information
2. The source IP address might help identify the user if Baylor has a dedicated IP
3. You're using AWS SSO or federation where the user's identity might be preserved

## Best practices for tracking individual users

To better track who is actually using shared credentials:
1. Use individual IAM users instead of shared credentials
2. Implement AWS SSO or federation for better identity tracking
3. Use tags in your upload process to include metadata about the actual user
4. Implement a check-out system for credentials with logging
5. Consider using pre-signed URLs for uploads that can be tied to specific users

Would you like more specific details on implementing any of these tracking methods?

> so if I used a credential of the SSO role I created via IDC for the user to login, I would be able to see the actual user even though the role is also a shared one?
how would that appears in the log? can't I see this in the cloudtrail log?

Yes, if you use AWS IAM Identity Center (formerly AWS SSO) instead of IAM users, you'll get much better visibility into the actual human user who performed the action,
even when they're assuming a shared role. Here's how it works and what you'll see in CloudTrail:

## What appears in CloudTrail logs with IAM Identity Center

When a user authenticates through IAM Identity Center and assumes a role, CloudTrail logs will contain:

1. userIdentity.type: "AssumedRole" (not "IAMUser")

2. userIdentity.principalId: This will include TWO parts separated by a colon:
   • The role ID
   • The session name, which with IAM Identity Center is set to the actual username
   • Example: AROAEXAMPLEROLEID:john.smith@company.com

3. userIdentity.arn: Will show both the role and the session name:
   • Example: arn:aws:sts::123456789012:assumed-role/AWSReservedSSO_RoleName_123abc/john.smith@company.com

4. sessionContext.sessionIssuer: Information about the role that was assumed

5. additionalEventData: May contain additional identity information

## Example CloudTrail entry (simplified)

json
{
  "eventVersion": "1.08",
  "userIdentity": {
    "type": "AssumedRole",
    "principalId": "AROAEXAMPLEID:baylor.johnson@company.com",
    "arn": "arn:aws:sts::123456789012:assumed-role/AWSReservedSSO_PowerUserAccess_123abc/baylor.johnson@company.com",
    "accountId": "123456789012",
    "sessionContext": {
      "sessionIssuer": {
        "type": "Role",
        "principalId": "AROAEXAMPLEID",
        "arn": "arn:aws:iam::123456789012:role/AWSReservedSSO_PowerUserAccess_123abc",
        "accountId": "123456789012",
        "userName": "AWSReservedSSO_PowerUserAccess_123abc"
      },
      "webIdFederationData": {},
      "attributes": {
        "creationDate": "2023-03-20T15:15:20Z",
        "mfaAuthenticated": "false"
      }
    }
  },
  "eventTime": "2023-03-20T15:20:30Z",
  "eventSource": "s3.amazonaws.com",
  "eventName": "PutObject",
  "awsRegion": "us-east-1",
  "sourceIPAddress": "192.0.2.1",
  "userAgent": "aws-cli/2.9.19",
  "requestParameters": {
    "bucketName": "media",
    "key": "example.jpg"
  },
  "responseElements": null,
  "requestID": "EXAMPLE123456789",
  "eventID": "EXAMPLE987654321",
  "readOnly": false,
  "resources": [
    {
      "type": "AWS::S3::Object",
      "ARN": "arn:aws:s3:::media/example.jpg"
    },
    {
      "accountId": "123456789012",
      "type": "AWS::S3::Bucket",
      "ARN": "arn:aws:s3:::media"
    }
  ],
  "eventType": "AwsApiCall",
  "managementEvent": false,
  "recipientAccountId": "123456789012",
  "eventCategory": "Data"
}


## How to query CloudTrail for this information

You can search CloudTrail logs for actions by a specific user with:

bash
aws cloudtrail lookup-events --lookup-attributes AttributeKey=Username,AttributeValue=baylor.johnson@company.com


Or filter for S3 PutObject events on your media bucket:

bash
aws cloudtrail lookup-events \
  --lookup-attributes AttributeKey=EventName,AttributeValue=PutObject \
  --query "Events[?Resources[?contains(ResourceName, 'media')]]"


## Important considerations

1. For this to work with tools like FileZilla, you'll need to provide temporary credentials from IAM Identity Center to the user, which they can use in FileZilla.

2. The AWS CLI v2 has built-in support for IAM Identity Center profiles, making it easy to get temporary credentials.

3. For third-party tools, users may need to refresh their temporary credentials periodically.

4. You can also implement attribute-based access control (ABAC) with IAM Identity Center to further refine permissions based on user attributes.

Would you like more details on setting up FileZilla to work with IAM Identity Center credentials?
