{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "config:*",
        "cloudtrail:*",
        "guardduty:*",
        "securityhub:*",
        "inspector:*",
        "inspector2:*",
        "macie2:*",
        "access-analyzer:*",
        "firewall-manager:*",
        "shield:*",
        "waf:*",
        "wafv2:*",
        "cloudhsm:*",
        "kms:*",
        "secretsmanager:*",
        "ssm:*Document",
        "ssm:*Parameter*",
        "ssm:GetInventory*",
        "ssm:List*",
        "ssm:Describe*",
        "acm:*",
        "iam:Get*",
        "iam:List*",
        "iam:Generate*",
        "iam:Simulate*",
        "iam:PassRole",
        "organizations:Describe*",
        "organizations:List*",
        "cloudwatch:Get*",
        "cloudwatch:List*",
        "cloudwatch:Describe*",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:DisableAlarmActions",
        "logs:Get*",
        "logs:List*",
        "logs:Describe*",
        "logs:StartQuery",
        "logs:StopQuery",
        "logs:FilterLogEvents",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "sns:Get*",
        "sns:List*",
        "sns:Publish",
        "sns:Subscribe",
        "sns:Unsubscribe",
        "sns:CreateTopic",
        "events:PutRule",
        "events:PutTargets",
        "events:EnableRule",
        "events:DisableRule",
        "events:List*",
        "events:Describe*",
        "lambda:Get*",
        "lambda:List*",
        "lambda:InvokeFunction",
        "s3:Get*",
        "s3:List*",
        "s3:PutBucketPolicy",
        "s3:GetBucketPolicy",
        "s3:PutEncryptionConfiguration",
        "s3:PutBucketLogging",
        "s3:PutBucketVersioning",
        "ec2:Describe*",
        "ec2:CreateSecurityGroup",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceNetworkAclAssociation",
        "vpc:*FlowLog*",
        "network-firewall:*",
        "ram:Get*",
        "ram:List*",
        "tag:Get*",
        "resource-groups:List*",
        "resource-groups:Get*"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreatePolicy",
        "iam:DeletePolicy",
        "iam:CreatePolicyVersion",
        "iam:DeletePolicyVersion",
        "iam:SetDefaultPolicyVersion",
        "iam:AttachRolePolicy",
        "iam:DetachRolePolicy",
        "iam:PutRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:UpdateRole",
        "iam:UpdateAssumeRolePolicy"
      ],
      "Resource": [
        "arn:aws:iam::*:policy/security-*",
        "arn:aws:iam::*:role/security-*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole"
      ],
      "Resource": "arn:aws:iam::*:role/security-*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreateServiceLinkedRole"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "iam:AWSServiceName": [
            "guardduty.amazonaws.com",
            "securityhub.amazonaws.com",
            "macie.amazonaws.com",
            "inspector.amazonaws.com",
            "inspector2.amazonaws.com",
            "config.amazonaws.com",
            "access-analyzer.amazonaws.com",
            "firewall-manager.amazonaws.com",
            "shield.amazonaws.com"
          ]
        }
      }
    }
  ]
}
