{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "cloudtrail:LookupEvents",
        "cloudtrail:GetTrail",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:DescribeTrails",
        "cloudtrail:ListTags",
        "cloudtrail:ListPublicKeys",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetInsightSelectors",
        "cloudtrail:StartLogging",
        "cloudtrail:StartQuery",
        "cloudtrail:StopQuery",
        "cloudtrail:GetQueryResults",
        "cloudtrail:DescribeQueries",
        "cloudtrail:ListQueries",
        "cloudtrail:CancelQuery",
        "config:DeliverConfigSnapshot",
        "config:DescribeComplianceByConfigRule",
        "config:DescribeComplianceByResource",
        "config:DescribeConfigRuleEvaluationStatus",
        "config:DescribeConfigRules",
        "config:DescribeConfigurationRecorderStatus",
        "config:DescribeConfigurationRecorders",
        "config:DescribeDeliveryChannelStatus",
        "config:DescribeDeliveryChannels",
        "config:GetComplianceDetailsByConfigRule",
        "config:GetComplianceDetailsByResource",
        "config:GetComplianceSummaryByConfigRule",
        "config:GetComplianceSummaryByResourceType",
        "config:GetResourceConfigHistory",
        "config:ListDiscoveredResources",
        "config:SelectResourceConfig",
        "config:StartConfigRulesEvaluation",
        "config:StartConfigurationRecorder",
        "guardduty:GetDetector",
        "guardduty:GetFindings",
        "guardduty:ListDetectors",
        "guardduty:ListFindings",
        "guardduty:GetFindingsStatistics",
        "guardduty:GetMasterAccount",
        "guardduty:GetMembers",
        "guardduty:UpdateDetector",
        "guardduty:UpdateFindingsFeedback",
        "guardduty:ArchiveFindings",
        "guardduty:UnarchiveFindings",
        "securityhub:GetFindings",
        "securityhub:GetInsights",
        "securityhub:GetInsightResults",
        "securityhub:UpdateFindings",
        "securityhub:UpdateInsight",
        "securityhub:BatchUpdateFindings",
        "securityhub:DescribeHub",
        "securityhub:DescribeProducts",
        "securityhub:DescribeStandards",
        "securityhub:DescribeStandardsControls",
        "securityhub:EnableSecurityHub",
        "securityhub:EnableStandardsControl",
        "securityhub:DisableStandardsControl",
        "securityhub:ListEnabledProductsForImport",
        "securityhub:ListInvitations",
        "securityhub:ListMembers",
        "securityhub:ListStandardsControlAssociations",
        "inspector:ListFindings",
        "inspector:DescribeFindings",
        "inspector2:ListFindings",
        "inspector2:BatchGetFindingDetails",
        "inspector2:GetFindingsReportStatus",
        "inspector2:ListCoverage",
        "inspector2:ListCoverageStatistics",
        "inspector2:ListFindingAggregations",
        "macie2:GetFindings",
        "macie2:ListFindings",
        "macie2:DescribeBuckets",
        "macie2:GetBucketStatistics",
        "macie2:GetFindingStatistics",
        "macie2:GetSensitiveDataOccurrences",
        "macie2:GetSensitiveDataOccurrencesAvailability",
        "access-analyzer:ListFindings",
        "access-analyzer:GetFinding",
        "access-analyzer:StartResourceScan",
        "access-analyzer:ValidatePolicy",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:ListMetrics",
        "cloudwatch:SetAlarmState",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:FilterLogEvents",
        "logs:GetLogEvents",
        "logs:StartQuery",
        "logs:StopQuery",
        "logs:TestMetricFilter",
        "logs:GetQueryResults",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSecurityGroupRules",
        "ec2:DescribeVpcs",
        "ec2:DescribeSubnets",
        "ec2:DescribeRouteTables",
        "ec2:DescribeNatGateways",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeFlowLogs",
        "ec2:CreateSnapshot",
        "ec2:GetConsoleScreenshot",
        "ec2:DescribeSnapshots",
        "ec2:CreateTags",
        "ec2:ModifyInstanceAttribute",
        "ec2:StopInstances",
        "ec2:CreateSecurityGroup",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:CreateFlowLogs",
        "iam:GenerateCredentialReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListPolicies",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoles",
        "iam:ListUserPolicies",
        "iam:ListUsers",
        "iam:SimulatePrincipalPolicy",
        "iam:SimulateCustomPolicy",
        "iam:UpdateAccessKey",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetReplicationConfiguration",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketPolicy",
        "s3:PutEncryptionConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectTagging",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionTagging",
        "kms:DescribeKey",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:ListAliases",
        "kms:ListKeys",
        "kms:ListKeyPolicies",
        "kms:ListResourceTags",
        "kms:DisableKey",
        "kms:EnableKey",
        "kms:CancelKeyDeletion",
        "waf:GetRateBasedRule",
        "waf:GetRule",
        "waf:GetWebACL",
        "waf:ListRateBasedRules",
        "waf:ListRules",
        "waf:ListWebACLs",
        "wafv2:GetWebACL",
        "wafv2:ListWebACLs",
        "wafv2:GetRuleGroup",
        "wafv2:ListRuleGroups",
        "wafv2:CheckCapacity",
        "wafv2:GetIPSet",
        "wafv2:ListIPSets",
        "wafv2:GetRegexPatternSet",
        "wafv2:ListRegexPatternSets",
        "wafv2:GetManagedRuleSet",
        "wafv2:ListManagedRuleSets",
        "wafv2:GetSampledRequests",
        "wafv2:UpdateWebACL",
        "shield:DescribeAttack",
        "shield:DescribeProtection",
        "shield:ListAttacks",
        "shield:ListProtections",
        "network-firewall:DescribeFirewall",
        "network-firewall:DescribeFirewallPolicy",
        "network-firewall:DescribeRuleGroup",
        "network-firewall:ListFirewalls",
        "network-firewall:ListFirewallPolicies",
        "network-firewall:ListRuleGroups",
        "network-firewall:UpdateFirewallPolicy",
        "network-firewall:UpdateRuleGroup",
        "lambda:ListFunctions",
        "lambda:GetFunction",
        "lambda:GetPolicy",
        "lambda:ListEventSourceMappings",
        "lambda:GetFunctionConfiguration",
        "lambda:InvokeFunction",
        "sns:ListTopics",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:GetTopicAttributes",
        "sns:GetSubscriptionAttributes",
        "sns:Publish",
        "sqs:ListQueues",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage",
        "events:ListRules",
        "events:ListTargetsByRule",
        "events:DescribeRule",
        "events:PutRule",
        "events:PutTargets",
        "events:EnableRule",
        "events:DisableRule",
        "ssm:DescribeAutomationExecutions",
        "ssm:GetAutomationExecution",
        "ssm:StartAutomationExecution",
        "ssm:StopAutomationExecution",
        "ssm:ListCommands",
        "ssm:ListCommandInvocations",
        "ssm:GetCommandInvocation",
        "ssm:SendCommand",
        "ssm:CancelCommand",
        "ssm:DescribeInstanceInformation",
        "ssm:DescribeDocumentParameters",
        "ssm:DescribeDocument",
        "ssm:GetDocument",
        "ssm:ListDocuments",
        "ssm:StartSession",
        "ssm:TerminateSession",
        "ssm:ResumeSession",
        "ssm:DescribeSessions",
        "ssm:GetConnectionStatus",
        "organizations:DescribeAccount",
        "organizations:DescribeOrganization",
        "organizations:DescribeOrganizationalUnit",
        "organizations:DescribePolicy",
        "organizations:ListAccounts",
        "organizations:ListAccountsForParent",
        "organizations:ListChildren",
        "organizations:ListOrganizationalUnitsForParent",
        "organizations:ListParents",
        "organizations:ListPolicies",
        "organizations:ListPoliciesForTarget",
        "organizations:ListRoots",
        "organizations:ListTargetsForPolicy",
        "support:DescribeCases",
        "support:DescribeCommunications",
        "support:DescribeSeverityLevels",
        "support:CreateCase",
        "support:AddCommunicationToCase",
        "support:ResolveCase",
        "health:DescribeAffectedEntities",
        "health:DescribeEventDetails",
        "health:DescribeEvents",
        "health:DescribeEventTypes",
        "health:DescribeEntityAggregates",
        "health:DescribeEventAggregates",
        "ram:GetResourceShares",
        "ram:ListResources",
        "ram:ListPrincipals",
        "ram:ListResourceSharePermissions",
        "tag:GetResources",
        "tag:GetTagKeys",
        "tag:GetTagValues",
        "resource-groups:ListGroups",
        "resource-groups:ListGroupResources",
        "resource-groups:GetGroup",
        "resource-groups:GetGroupQuery",
        "resourcegroupstaggingapi:GetResources",
        "resourcegroupstaggingapi:GetTagKeys",
        "resourcegroupstaggingapi:GetTagValues"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:DeleteAccessKey",
        "iam:UpdateAccessKey"
      ],
      "Resource": "arn:aws:iam::*:user/*",
      "Condition": {
        "StringEquals": {
          "aws:ResourceTag/SOC-IR-Managed": "true"
        }
      }
    }
  ]
}
