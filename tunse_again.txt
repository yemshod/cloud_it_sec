Understood — if actions/github-script is not permitted in your environment, we can replace it with a pure Git command approach using git directly in the self-hosted runner.

Below is the updated deploy pipeline using only shell commands — no GitHub actions other than checkout.

⸻

✅ Git-Only deploy-automation.yml Workflow (Safe for restricted environments)

name: Deploy (automation)

on:
  issue_comment:
    types: [created]

jobs:
  get-metadata:
    runs-on: self-hosted
    outputs:
      is_ok_to_apply: ${{ steps.check.outputs.is_ok_to_apply }}
      tf_folder: ${{ steps.setpath.outputs.tf_folder }}
      pr_branch: ${{ steps.branch.outputs.pr_branch }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # required to enable git diff against origin/master

    - name: Check if comment is /ok-to-apply
      id: check
      run: |
        comment="${{ github.event.comment.body }}"
        if [[ "$comment" =~ ^/ok-to-apply ]]; then
          echo "is_ok_to_apply=true" >> $GITHUB_OUTPUT
        else
          echo "is_ok_to_apply=false" >> $GITHUB_OUTPUT
        fi

    - name: Determine PR Branch Name
      id: branch
      if: steps.check.outputs.is_ok_to_apply == 'true'
      run: |
        branch_name=$(git rev-parse --abbrev-ref HEAD)
        echo "pr_branch=$branch_name" >> $GITHUB_OUTPUT

    - name: Detect TF Folder Path
      id: setpath
      if: steps.check.outputs.is_ok_to_apply == 'true'
      run: |
        git fetch origin master
        folder=$(git diff --name-only origin/master...HEAD | grep '^cloud-security/automation/pri-aws-accounts/primerica-dev-1234567890/' | grep '\.tf' | head -n 1 | xargs dirname)
        if [[ -z "$folder" ]]; then
          echo "No Terraform folder changed — exiting"
          echo "tf_folder=none" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "TF folder: $folder"
        echo "tf_folder=$folder" >> $GITHUB_OUTPUT



⸻

✅ Deploy Job (Only if branch + comment matches)

  deploy:
    needs: get-metadata
    if: |
      needs.get-metadata.outputs.is_ok_to_apply == 'true' &&
      startsWith(needs.get-metadata.outputs.pr_branch, 'primerica-dev-1234567890/automation/')
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ${{ needs.get-metadata.outputs.tf_folder }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.7

    - name: Terraform Init
      run: terraform init -backend-config=../../backend.s3.tfbackend

    - name: Terraform Plan
      run: terraform plan -var-file=terraform.tfvars

xxxxxxxxxxx

- name: Configure Git credentials
  run: |
    git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

- name: Detect TF Folder Path
  id: setpath
  if: steps.check.outputs.is_ok_to_apply == 'true'
  run: |
    git fetch origin master
    folder=$(git diff --name-only origin/master...HEAD | grep '^cloud-security/automation/pri-aws-accounts/primerica-dev-1234567890/' | grep '\.tf' | head -n 1 | xargs dirname)
    if [[ -z "$folder" ]]; then
      echo "No Terraform folder changed — exiting"
      echo "tf_folder=none" >> $GITHUB_OUTPUT
      exit 0
    fi
    echo "TF folder: $folder"
    echo "tf_folder=$folder" >> $GITHUB_OUTPUT



⸻

✅ Summary

Capability	Status
No gh CLI	✅
No actions/github-script	✅
Only git shell commands	✅
Uses /ok-to-apply comment	✅
Reads changed folder automatically	✅
Targets correct nested directory	✅



⸻

Let me know if you want me to replicate this for other departments like compliance, scripts, etc. I can help modularize it across workflows or unify into a matrix job based on your preference.
